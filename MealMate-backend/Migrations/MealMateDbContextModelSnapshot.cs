// <auto-generated />
using System;
using MealMate_backend.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MealMate_backend.Migrations
{
    [DbContext(typeof(MealMateDbContext))]
    partial class MealMateDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MealMate_backend.Domain.Entities.Dish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Instructions")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("PreparationMinutes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Dishes");
                });

            modelBuilder.Entity("MealMate_backend.Domain.Entities.DishProduct", b =>
                {
                    b.Property<int>("DishId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Quantity")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("DishId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("DishProducts");
                });

            modelBuilder.Entity("MealMate_backend.Domain.Entities.MealGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccentColor")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("MealGroups");
                });

            modelBuilder.Entity("MealMate_backend.Domain.Entities.MealGroupDish", b =>
                {
                    b.Property<int>("MealGroupId")
                        .HasColumnType("int");

                    b.Property<int>("DishId")
                        .HasColumnType("int");

                    b.HasKey("MealGroupId", "DishId");

                    b.HasIndex("DishId");

                    b.ToTable("MealGroupDishes");
                });

            modelBuilder.Entity("MealMate_backend.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("MealMate_backend.Domain.Entities.DishProduct", b =>
                {
                    b.HasOne("MealMate_backend.Domain.Entities.Dish", "Dish")
                        .WithMany("DishProducts")
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MealMate_backend.Domain.Entities.Product", "Product")
                        .WithMany("DishProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dish");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MealMate_backend.Domain.Entities.MealGroupDish", b =>
                {
                    b.HasOne("MealMate_backend.Domain.Entities.Dish", "Dish")
                        .WithMany("MealGroupDishes")
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MealMate_backend.Domain.Entities.MealGroup", "MealGroup")
                        .WithMany("MealGroupDishes")
                        .HasForeignKey("MealGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dish");

                    b.Navigation("MealGroup");
                });

            modelBuilder.Entity("MealMate_backend.Domain.Entities.Dish", b =>
                {
                    b.Navigation("DishProducts");

                    b.Navigation("MealGroupDishes");
                });

            modelBuilder.Entity("MealMate_backend.Domain.Entities.MealGroup", b =>
                {
                    b.Navigation("MealGroupDishes");
                });

            modelBuilder.Entity("MealMate_backend.Domain.Entities.Product", b =>
                {
                    b.Navigation("DishProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
